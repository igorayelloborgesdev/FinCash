{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = initiate;\nexports.next = next;\nexports.nextSec = nextSec;\nexports.resetItToDefaultState = resetItToDefaultState;\nexports.previous = previous;\nexports.previousSec = previousSec;\nexports.moveToPrevious = moveToPrevious;\nexports.moveToNext = moveToNext;\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _momentRange = require('moment-range');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar moment = (0, _momentRange.extendMoment)(_moment2.default);\nvar obj = {\n  startDate: null,\n  endDate: null,\n  isEndDateNotFinalized: true,\n  leftCalendar: {\n    calendar: {\n      \"0\": {\n        \"0\": \"2019-03-03\",\n        \"1\": \"2019-03-04\"\n      },\n      \"1\": {\n        \"0\": \"2019-03-04\",\n        \"1\": \"2019-03-04\"\n      }\n    }\n  },\n  rightCalendar: {\n    calendar: {\n      \"0\": {\n        \"0\": \"2019-03-03\",\n        \"1\": \"2019-03-04\"\n      },\n      \"1\": {\n        \"0\": \"2019-03-04\",\n        \"1\": \"2019-03-04\"\n      }\n    }\n  }\n};\nvar dateChangeHandler = false;\nvar anyDateChangeHandler = false;\nvar tdCssObj = false;\nvar onHoverTdCssObj = false;\nvar inRangedTdCssObj = false;\nvar currentDateTdCssObj = false;\nvar startDateTdCssObj = false;\nvar endDateTdCssObj = false;\nvar disabledDatesTdCssObj = false;\nvar selected_values = {};\nvar today = new Date();\nvar actualCurrentDay = new Date();\nvar disabledDates = [];\nvar disablePrevDates = false;\nvar currentMonth1 = today.getMonth();\nvar currentMonth2 = today.getMonth();\nvar currentYear1 = today.getFullYear();\nvar currentYear2 = today.getFullYear();\nvar selectYear1 = document.getElementById(\"year1\");\nvar selectYear2 = document.getElementById(\"year2\");\nvar selectMonth1 = document.getElementById(\"month1\");\nvar selectMonth2 = document.getElementById(\"month2\");\nvar cancelMouseOut = false;\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nvar monthAndYear1 = document.getElementById(\"monthAndYear1\");\nvar monthAndYear2 = document.getElementById(\"monthAndYear2\");\n\nfunction initiate(props) {\n  selectYear1 = document.getElementById(\"year1\");\n  selectYear2 = document.getElementById(\"year2\");\n  selectMonth1 = document.getElementById(\"month1\");\n  selectMonth2 = document.getElementById(\"month2\");\n  monthAndYear1 = document.getElementById(\"monthAndYear1\");\n  monthAndYear2 = document.getElementById(\"monthAndYear2\");\n  if (props && props.onSelect && typeof props.onSelect === 'function') dateChangeHandler = props.onSelect;\n  if (props && props.onChange && typeof props.onSelect === 'function') anyDateChangeHandler = props.onChange;\n\n  if (props && props.selectedRange && Array.isArray(props.selectedRange) && props.selectedRange.length > 1) {\n    selected_values['startDate'] = props.selectedRange[0];\n    selected_values['endDate'] = props.selectedRange[1];\n  }\n\n  if (selected_values['startDate']) {\n    today = new Date(selected_values['startDate']); // here we are forcing our calendar to open according the start date not by current date\n\n    currentYear1 = currentYear2 = today.getFullYear();\n    currentMonth1 = currentMonth2 = today.getMonth();\n  }\n\n  if (props && props.disabledDates && typeof props.disabledDates === 'function') {\n    if (Array.isArray(props.disabledDates())) disabledDates = props.disabledDates();else throw new Error(\"prop, disabledDates method should return just array data type e.g. ['YYYY-MM-DD','YYYY-MM-DD']\");\n  }\n\n  if (props && props.disablePrevDates) {\n    disablePrevDates = props.disablePrevDates;\n  } // from here props starts related to styling\n\n\n  if (props && props.tdCssObj && props.tdCssObj instanceof Object) {\n    tdCssObj = props.tdCssObj;\n  }\n\n  if (props && props.onHoverTdCssObj && props.onHoverTdCssObj instanceof Object) {\n    onHoverTdCssObj = props.onHoverTdCssObj;\n  }\n\n  if (props && props.inRangedTdCssObj && props.inRangedTdCssObj instanceof Object) {\n    inRangedTdCssObj = props.inRangedTdCssObj;\n  }\n\n  if (props && props.currentDateTdCssObj && props.currentDateTdCssObj instanceof Object) {\n    currentDateTdCssObj = props.currentDateTdCssObj;\n  }\n\n  if (props && props.startDateTdCssObj && props.startDateTdCssObj instanceof Object) {\n    startDateTdCssObj = props.startDateTdCssObj;\n  }\n\n  if (props && props.endDateTdCssObj && props.endDateTdCssObj instanceof Object) {\n    endDateTdCssObj = props.endDateTdCssObj;\n  }\n\n  showCalendar(currentMonth1, currentYear1);\n  showSecondCalendar();\n  selectValuesOnCalendar();\n}\n\nfunction next() {\n  currentYear1 = currentMonth1 === 11 ? currentYear1 + 1 : currentYear1;\n  currentMonth1 = (currentMonth1 + 1) % 12;\n  showCalendar(currentMonth1, currentYear1);\n}\n\nfunction nextSec() {\n  currentYear2 = currentMonth2 === 11 ? currentYear2 + 1 : currentYear2;\n  currentMonth2 = (currentMonth2 + 1) % 12;\n  showCalendar(currentMonth2, currentYear2, \"calendar-right-body\", monthAndYear2);\n}\n\nfunction resetItToDefaultState() {\n  previousSec();\n}\n\nfunction showSecondCalendar() {\n  currentYear2 = currentMonth2 === 11 ? currentYear2 + 1 : currentYear2;\n  currentMonth2 = (currentMonth2 + 1) % 12;\n  showCalendar(currentMonth2, currentYear2, \"calendar-right-body\", monthAndYear2);\n}\n\nfunction previous() {\n  currentYear1 = currentMonth1 === 0 ? currentYear1 - 1 : currentYear1;\n  currentMonth1 = currentMonth1 === 0 ? 11 : currentMonth1 - 1;\n  showCalendar(currentMonth1, currentYear1, \"calendar-left-body\", monthAndYear1);\n}\n\nfunction previousSec() {\n  currentYear2 = currentMonth2 === 0 ? currentYear2 - 1 : currentYear2;\n  currentMonth2 = currentMonth2 === 0 ? 11 : currentMonth2 - 1;\n  showCalendar(currentMonth2, currentYear2, \"calendar-right-body\", monthAndYear2);\n}\n\nfunction jump() {\n  currentYear = parseInt(selectYear.value);\n  currentMonth = parseInt(selectMonth1.value);\n  showCalendar(currentMonth, currentYear);\n}\n\nfunction moveToPrevious() {\n  previous();\n  previousSec();\n  selectValuesOnCalendar();\n}\n\nfunction moveToNext() {\n  next();\n  nextSec();\n  selectValuesOnCalendar();\n}\n\nvar getDaysRange = function getDaysRange(startDate, endDate) {\n  if (startDate && endDate) {\n    var arr = [];\n    var range = moment.range(startDate, endDate);\n\n    for (var _iterator = range.by('days'), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var day = _ref;\n      day = day.format('YYYY-MM-DD');\n      if (disabledDates.indexOf(day) > 0) ;else arr.push(day);\n    }\n\n    return arr;\n  }\n\n  return undefined;\n};\n\nfunction disableIt(condition, cell) {\n  var registerEvents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  cell.classList.remove('disabled');\n  cell.classList.remove('not-available');\n\n  if (condition) {\n    cell.classList.add('disabled');\n    cell.classList.add('not-available');\n    registerEvents = false;\n  } // don't register any event on it.....\n\n\n  return registerEvents;\n}\n\nfunction showCalendar(month, year) {\n  var tableId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"calendar-left-body\";\n  var monthAndYear1 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : document.getElementById(\"monthAndYear1\");\n  var firstDay = new Date(year, month).getDay();\n  var daysInMonth = 32 - new Date(year, month, 32).getDate();\n  var tbl = document.getElementById(tableId); // body of the calendar\n  // clearing all previous cells\n\n  tbl.innerHTML = \"\"; // filing data about month and in the page via DOM.\n\n  if (tableId === 'calendar-left-body') {\n    monthAndYear1.innerHTML = months[month] + \", \" + year;\n    selectYear1.value = year;\n    selectMonth1.value = month;\n  } else if (tableId === 'calendar-right-body') {\n    selectYear2.value = year;\n    selectMonth2.value = month;\n    monthAndYear2.innerHTML = months[month] + \", \" + year;\n  } // creating all cells\n\n\n  var date = 1;\n\n  for (var i = 0; i < 6; i++) {\n    // creates a table row\n    var row = document.createElement(\"tr\"); //creating individual cells, filing them up with data.\n\n    for (var j = 0; j < 7; j++) {\n      if (i === 0 && j < firstDay) {\n        var cell = document.createElement(\"td\");\n        var cellText = document.createTextNode(\"\");\n        cell.appendChild(cellText);\n        cell.classList.add('td-not');\n        row.appendChild(cell);\n      } else if (date > daysInMonth) {\n        break;\n      } else {\n        var _cell = document.createElement(\"td\");\n\n        var _cellText = document.createTextNode(date);\n\n        if (date === today.getDate() && year === today.getFullYear() && month === today.getMonth()) {} // cell.classList.add(\"current\");\n        // color today's date\n\n\n        _cell.classList.remove('current');\n\n        _cell.appendChild(_cellText);\n\n        row.appendChild(_cell); // adding date values in global object....\n\n        if (typeof obj.leftCalendar.calendar[i] === 'undefined') obj.leftCalendar.calendar[i] = {};\n        if (typeof obj.rightCalendar.calendar[i] === 'undefined') obj.rightCalendar.calendar[i] = {};\n        var thatDay = void 0;\n\n        if (tableId === 'calendar-left-body') {\n          thatDay = obj.leftCalendar.calendar[i][j] = moment(currentYear1 + '-' + (currentMonth1 + 1) + '-' + date, 'YYYY-MM-DD');\n          if (moment(actualCurrentDay).isSame(obj.leftCalendar.calendar[i][j], 'day')) _cell.classList.add('current');\n        } else {\n          thatDay = obj.rightCalendar.calendar[i][j] = moment(currentYear2 + '-' + (currentMonth2 + 1) + '-' + date, 'YYYY-MM-DD');\n          if (moment(actualCurrentDay, 'YYYY-MM-DD').isSame(obj.rightCalendar.calendar[i][j], 'day')) _cell.classList.add('current');\n        }\n\n        var registerEvents = true;\n\n        if (disablePrevDates && moment(actualCurrentDay, 'YYYY-MM-DD').isAfter(thatDay, 'day')) {\n          disabledDates.push(thatDay.format('YYYY-MM-DD'));\n        }\n\n        if (disabledDates && Array.isArray(disabledDates) && disabledDates.length > 0) {\n          for (var _iterator2 = disabledDates, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n            var _ref2;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref2 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref2 = _i2.value;\n            }\n\n            var disabledDate = _ref2;\n            registerEvents = disableIt(moment(disabledDate, 'YYYY-MM-DD')._isValid && thatDay.isSame(moment(disabledDate, 'YYYY-MM-DD'), 'day'), _cell);\n            if (registerEvents === false) break;\n          }\n        }\n\n        if (registerEvents) {\n          _cell.dataset.title = 'r' + i + 'c' + j;\n          _cell.style.textAlign = 'center'; // mouseover event listener\n\n          _cell.addEventListener('mouseover', function (e) {\n            e.target.classList.add('active');\n            onHoverAfterStartDate(e);\n            applyStyling();\n          }); // called here to put styling default color of actual current date...\n\n\n          applyStyling(); // mouseout event listener\n\n          var mouseout = function mouseout(e) {\n            e.target.classList.remove('active');\n            applyStyling();\n          };\n\n          _cell.addEventListener('mouseout', mouseout); // click event listener\n\n\n          _cell.addEventListener('click', function (e) {\n            document.querySelectorAll('.active').forEach(function (elem) {\n              elem.classList.remove('active');\n            });\n\n            if (!obj.startDate || obj.startDate && obj.endDate || obj.startDate && !obj.endDate && getDateFromTarget(e.target).isBefore(obj.startDate)) {\n              // removing previous selected start and end date....\n              document.querySelectorAll('.start-date').forEach(function (elem) {\n                elem.classList.remove('start-date');\n              });\n              document.querySelectorAll('.end-date').forEach(function (elem) {\n                elem.classList.remove('end-date');\n              });\n              e.target.classList.add('start-date');\n              e.target.classList.add('active');\n              obj.startDate = getDateFromTarget(e.target);\n              selected_values['startDate'] = obj.startDate.format('YYYY-MM-DD');\n              obj.endDate = null;\n              selected_values['endDate'] = null;\n              obj.isEndDateNotFinalized = true;\n              if (anyDateChangeHandler) anyDateChangeHandler(obj.startDate.format('YYYY-MM-DD'));\n              onHoverAfterStartDate(e);\n            } else if (obj.startDate && !obj.endDate && getDateFromTarget(e.target).isAfter(obj.startDate) || getDateFromTarget(e.target).isSame(obj.startDate, 'day')) {\n              document.querySelectorAll('.end-date').forEach(function (elem) {\n                elem.classList.remove('end-date');\n              });\n              e.target.classList.add('end-date');\n              e.target.classList.add('active');\n              obj.endDate = getDateFromTarget(e.target);\n              selected_values['endDate'] = obj.endDate.format('YYYY-MM-DD');\n              obj.isEndDateNotFinalized = false;\n              if (dateChangeHandler) dateChangeHandler(obj.startDate.format('YYYY-MM-DD'), obj.endDate.format('YYYY-MM-DD'), getDaysRange(obj.startDate, obj.endDate)); // e.target.removeEventListener('mouseout',mouseout)\n\n              if (anyDateChangeHandler) anyDateChangeHandler(obj.endDate.format('YYYY-MM-DD'));\n              selectValuesOnCalendar();\n            }\n\n            applyStyling();\n          });\n        }\n\n        date++;\n      }\n    }\n\n    tbl.appendChild(row); // appending each row into calendar body.\n  }\n}\n\nfunction selectValuesOnCalendar() {\n  if (selected_values['startDate'] && typeof selected_values['startDate'] === 'string' && selected_values['endDate']) {\n    obj.startDate = moment(selected_values['startDate'], 'YYYY-MM-DD');\n    obj.endDate = moment(selected_values['endDate'], 'YYYY-MM-DD'); // let cameInside = false;\n\n    document.querySelectorAll('.__cal__ tbody td').forEach(function (cell) {\n      if (!cell.dataset.title) return;\n      var title = cell.dataset.title;\n      var row = title.substr(1, 1);\n      var col = title.substr(3, 1);\n      var cal = cell.closest('.__cal__');\n      var dt = cal.classList.contains('left') ? obj.leftCalendar.calendar[row][col] : obj.rightCalendar.calendar[row][col];\n\n      if (dt.isSame(moment(selected_values['startDate'], 'YYYY-MM-DD'), 'day')) {\n        cell.classList.add('in-range');\n        cell.classList.add('start-date');\n      } else if (dt.isSame(moment(selected_values['endDate'], 'YYYY-MM-DD'), 'day')) {\n        obj.endDate = moment(selected_values['endDate'], 'YYYY-MM-DD');\n        cell.classList.add('end-date');\n        cell.classList.add('in-range');\n      } else if (dt.isAfter(obj.startDate) && dt.isBefore(moment(selected_values['endDate'], 'YYYY-MM-DD')) || dt.isSame(moment(selected_values['endDate'], 'YYYY-MM-DD'), 'day')) {\n        cell.classList.add('in-range');\n      } else {\n        cell.classList.remove('in-range');\n      }\n    });\n\n    if (selected_values['startDate'] && selected_values['endDate']) {\n      obj.isEndDateNotFinalized = false;\n      applyStyling();\n    }\n  }\n} /////////////////////////////////CUSTOM METHODS///////////////////////////////--------------------\n\n\nfunction applyStyling() {\n  var elem = void 0;\n\n  if (elem = document.querySelectorAll('td:not(.td-not)')) {\n    elem.forEach(function (e) {\n      e.style.color = 'black';\n      e.style.background = 'white';\n      tdCssObj && Object.entries(tdCssObj).forEach(function (_ref3) {\n        var key = _ref3[0],\n            val = _ref3[1];\n        e.style[key] = val;\n      });\n    });\n  }\n\n  if (elem = document.querySelectorAll('.active')) {\n    elem.forEach(function (e) {\n      e.style.color = 'white';\n      e.style.background = 'rgb(22, 36, 39)';\n      onHoverTdCssObj && Object.entries(onHoverTdCssObj).forEach(function (_ref4) {\n        var key = _ref4[0],\n            val = _ref4[1];\n        e.style[key] = val;\n      });\n    });\n  }\n\n  if (elem = document.querySelectorAll('.in-range')) {\n    elem.forEach(function (e) {\n      e.style.color = 'white';\n      e.style.background = 'rgb(128, 124, 148)'; // e.style.background = '#c4bbeb';\n\n      inRangedTdCssObj && Object.entries(inRangedTdCssObj).forEach(function (_ref5) {\n        var key = _ref5[0],\n            val = _ref5[1];\n        e.style[key] = val;\n      });\n    });\n  }\n\n  if (elem = document.querySelector('.current')) {\n    if (!elem.classList.contains('active')) {\n      elem.style.color = 'rgb(210, 6, 81)'; // elem.style.color = '#f16d9b';\n\n      currentDateTdCssObj && Object.entries(currentDateTdCssObj).forEach(function (_ref6) {\n        var key = _ref6[0],\n            val = _ref6[1];\n        elem.style[key] = val;\n      });\n    }\n  }\n\n  if (elem = document.querySelector('.start-date')) {\n    elem.style.color = 'white';\n    elem.style.background = 'rgb(22, 36, 39)';\n    startDateTdCssObj && Object.entries(startDateTdCssObj).forEach(function (_ref7) {\n      var key = _ref7[0],\n          val = _ref7[1];\n      elem.style[key] = val;\n    });\n  }\n\n  if (elem = document.querySelector('.end-date')) {\n    elem.style.color = 'white'; // elem.style.background='#6759a6';\n\n    elem.style.background = 'rgb(22, 36, 39)';\n    endDateTdCssObj && Object.entries(endDateTdCssObj).forEach(function (_ref8) {\n      var key = _ref8[0],\n          val = _ref8[1];\n      elem.style[key] = val;\n    });\n  }\n\n  if (elem = document.querySelectorAll('.disabled')) {\n    elem.forEach(function (e) {\n      // e.style = objec;\n      e.style.color = 'black';\n      e.style.opacity = '0.3';\n      e.style.textDecoration = 'line-through';\n      e.style.cursor = 'not-allowed';\n      e.style.background = 'white';\n      disabledDatesTdCssObj && Object.entries(disabledDatesTdCssObj).forEach(function (_ref9) {\n        var key = _ref9[0],\n            val = _ref9[1];\n        e.style[key] = val;\n      });\n    });\n  }\n}\n\nfunction onHoverAfterStartDate(e) {\n  if (e.target.classList.contains('not-available')) return;\n\n  if (obj.startDate && obj.isEndDateNotFinalized) {\n    var currentHovered = e.target;\n    var title = currentHovered.dataset.title;\n    var row = title.substr(1, 1);\n    var col = title.substr(3, 1);\n    var cal = currentHovered.closest('.__cal__');\n    var date = cal.classList.contains('left') ? obj.leftCalendar.calendar[row][col] : obj.rightCalendar.calendar[row][col];\n    document.querySelectorAll('.__cal__ tbody td').forEach(function (cell) {\n      if (!cell.dataset.title) return;\n      var title = cell.dataset.title;\n      var row = title.substr(1, 1);\n      var col = title.substr(3, 1);\n      var cal = cell.closest('.__cal__');\n      var dt = cal.classList.contains('left') ? obj.leftCalendar.calendar[row][col] : obj.rightCalendar.calendar[row][col];\n\n      if (dt.isAfter(obj.startDate) && dt.isBefore(date) || dt.isSame(date, 'day')) {\n        cell.classList.add('in-range');\n      } else {\n        cell.classList.remove('in-range');\n      }\n    });\n  }\n}\n\nfunction getDateFromTarget(eDotTarget) {\n  var currentTraget = eDotTarget;\n  var title = currentTraget.dataset.title;\n  var row = title.substr(1, 1);\n  var col = title.substr(3, 1);\n  var cal = currentTraget.closest('.__cal__');\n  var date = cal.classList.contains('left') ? obj.leftCalendar.calendar[row][col] : obj.rightCalendar.calendar[row][col];\n  return date;\n}","map":null,"metadata":{},"sourceType":"script"}