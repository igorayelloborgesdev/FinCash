{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setUTCISOWeekYear;\n\nvar _index = require('../../toDate/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('../startOfUTCISOWeekYear/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nfunction setUTCISOWeekYear(dirtyDate, dirtyISOYear, dirtyOptions) {\n  var date = (0, _index2.default)(dirtyDate, dirtyOptions);\n  var isoYear = Number(dirtyISOYear);\n  var dateStartOfYear = (0, _index4.default)(date, dirtyOptions);\n  var diff = Math.floor((date.getTime() - dateStartOfYear.getTime()) / MILLISECONDS_IN_DAY);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(isoYear, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  date = (0, _index4.default)(fourthOfJanuary, dirtyOptions);\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}